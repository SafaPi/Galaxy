/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import DAO.ProduitDAO;
import Entity.Produit;
import Entity.User;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.UIManager;

/**
 *
 * @author Dridi
 */
public class PanelAfficherProduits extends javax.swing.JPanel {

    /**
     * Creates new form PanelAfficherProduits
     */
     private static User user;
    private final static int button_width = 145;        // button width
    private final static int button_height = 140;        // button height
    private final static int horizontalGap = 10;         // horizontal gap in button
    private final static int verticalGap = 10;         // verticle gap in button
    private final static int numberOfColumns = 4;          // number of colums in the button panel
    private final static int fontSize = 11;         // font size of button name
    private final static int fontType = Font.BOLD;  // font type
    private final static String fontName = "Wide latin";    // font name
    private final static Color fontColor = new Color(149, 33, 32);  // font colot
    public PanelAfficherProduits() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");

        } catch (Exception ex) {
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        initComponents();
        //addMainMenue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
private void addMainMenue() {

        removeAll();
        repaint();
       // add(new JButton("eeee"), new org.netbeans.lib.awtextra.AbsoluteConstraints(verticalGap, horizontalGap, button_width, button_height));
        Image img, sub;
        ImageIcon icon;
        String imagePath;

        ArrayList menue = new ArrayList();
        ArrayList itemName = new ArrayList();

        ProduitDAO produitdao = new ProduitDAO();
        List<Produit> produits = produitdao.findAll();

        for (Produit produit : produits) {
            menue.add(produit.getId());
            itemName.add(produit.getNom());
           
        }

        JButton[] buttons = new JButton[menue.size()];

        for (int i = 0; i < buttons.length; i++) {

            imagePath = "/com/images/" + itemName.get(i) + ".jpg";
       //     ProduitDAO produitdao = new ProduitDAO();
           
            URL url = getClass().getResource(imagePath);
//                System.out.println(imagePath +"   Get Res : " +getClass().getResource(imagePath));

            if (url != null) {
                img = Toolkit.getDefaultToolkit().getImage(url);
                sub = img.getScaledInstance(button_width - 8, button_height - 30, Image.SCALE_FAST);
                icon = new ImageIcon(sub);
            } else {
                icon = new ImageIcon();
            }

            buttons[i] = new JButton(itemName.get(i).toString(), icon);
            buttons[i].setVerticalTextPosition(AbstractButton.BOTTOM);
            buttons[i].setHorizontalTextPosition(AbstractButton.CENTER);

            buttons[i].setBorder(javax.swing.BorderFactory.createEtchedBorder());
            buttons[i].setFont(new java.awt.Font("Wide latin", 2, 15));
            buttons[i].setForeground(new java.awt.Color(149, 33, 32));
           // System.out.println(""+produitdao.AffichagesProduitsbyNom(itemName.get(i).toString()));
            buttons[i].setActionCommand(menue.get(i).toString());
            buttons[i].addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {

                 
                    int choice = Integer.parseInt( e.getActionCommand());
                    ProduitDetails f = new ProduitDetails(choice,user);
                    f.setVisible(true);
                    //        addSubmenue(choice);
                   
           //         System.out.println(""+produitdao.AffichagesProduitsbyNom(choice)); 
                }
            });
            
        }

        int b = 0;
        int vGap = verticalGap;
        int hGap = horizontalGap;
        int bLength = buttons.length;
        int bRows = bLength / numberOfColumns + 1;

        L1:
        for (int j = 0; j < bRows; j++) {
            vGap = 10;
            for (int k = 0; k < numberOfColumns; k++) {

                add(buttons[b], new org.netbeans.lib.awtextra.AbsoluteConstraints(vGap, hGap, button_width, button_height));
                repaint();
                vGap += button_width + verticalGap;
                b++;
                if (b >= bLength) {
                    break L1;
                }
            }
            hGap += button_height + horizontalGap;
        }
    
    }

}
